/*
 * THIS FILE WAS AUTOMATICALLY GENERATED, DO NOT EDIT.
 *
 * This file was generated by the dom/make_names.pl script.
 *
 * Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY
 * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
 * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#include "config.h"
#ifdef SKIP_STATIC_CONSTRUCTORS_ON_GCC
#define DOM_epubNAMES_HIDE_GLOBALS 1
#else
#define QNAME_DEFAULT_CONSTRUCTOR 1
#endif

#include "epubNames.h"

#include <wtf/StaticConstructors.h>
namespace WebCore {

 namespace epubNames {

using namespace WebCore;

DEFINE_GLOBAL(AtomicString, epubNamespaceURI, "http://www.idpf.org/2007/ops")
// Tags
DEFINE_GLOBAL(QualifiedName, epub_caseTag, nullAtom, "epub:case", epubNamespaceURI);
DEFINE_GLOBAL(QualifiedName, epub_defaultTag, nullAtom, "epub:default", epubNamespaceURI);
DEFINE_GLOBAL(QualifiedName, epub_switchTag, nullAtom, "epub:switch", epubNamespaceURI);


WebCore::QualifiedName** getepubTags(size_t* size)
{
    static WebCore::QualifiedName* epubTags[] = {
        (WebCore::QualifiedName*)&epub_caseTag,
        (WebCore::QualifiedName*)&epub_defaultTag,
        (WebCore::QualifiedName*)&epub_switchTag,
    };
    *size = 3;
    return epubTags;
}

// Attributes
DEFINE_GLOBAL(QualifiedName, required_namespaceAttr, nullAtom, "required-namespace", epubNamespaceURI);


WebCore::QualifiedName** getepubAttrs(size_t* size)
{
    static WebCore::QualifiedName* epubAttr[] = {
        (WebCore::QualifiedName*)&required_namespaceAttr,
    };
    *size = 1;
    return epubAttr;
}

void init()
{
    static bool initialized = false;
    if (initialized)
        return;
    initialized = true;
    
    // Use placement new to initialize the globals.
    
    AtomicString::init();
    AtomicString epubNS("http://www.idpf.org/2007/ops");

    // Namespace
    new ((void*)&epubNamespaceURI) AtomicString(epubNS);

    // Tags
    new ((void*)&epub_caseTag) QualifiedName(nullAtom, "epub:case", epubNS);
    new ((void*)&epub_defaultTag) QualifiedName(nullAtom, "epub:default", epubNS);
    new ((void*)&epub_switchTag) QualifiedName(nullAtom, "epub:switch", epubNS);
    // Attributes
    new ((void*)&required_namespaceAttr) QualifiedName(nullAtom, "required-namespace", nullAtom);
}

} }

